
#============================================================================
# Configure Main Scheduler Properties
# 如果用RAMJobStore 直接拷贝 org.quartz 里面的默认配置文件就可以了 ,此配置文件针对的集群
#============================================================================
#调度标识名 集群中每一个实例都必须使用相同的名称 （区分特定的调度器实例）
org.quartz.scheduler.instanceName: DefaultQuartzScheduler
#ID设置为自动获取 每一个必须不同 （所有调度器实例中是唯一的）
org.quartz.scheduler.instanceId: AUTO
 
org.quartz.scheduler.skipUpdateCheck: true
 
#============================================================================
# Configure ThreadPool
#============================================================================
#ThreadPool 实现的类名
org.quartz.threadPool.class: org.quartz.simpl.SimpleThreadPool
#线程数量
org.quartz.threadPool.threadCount: 50
##线程优先级（threadPriority 属性的最大值是常量java.lang.Thread.MAX_PRIORITY，等于10。最小值为常量 java.lang.Thread.MIN_PRIORITY，为1）
org.quartz.threadPool.threadPriority: 5
#自创建父线程
org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread: true
 
#============================================================================
# Configure JobStore
#============================================================================
 
# 默认存储在内存中 
#org.quartz.jobStore.class = org.quartz.simpl.RAMJobStore 
#数据保存方式为持久化
org.quartz.jobStore.class: org.quartz.impl.jdbcjobstore.JobStoreTX
#org.quartz.jobStore.driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
#设置为TRUE不会出现序列化非字符串类到 BLOB 时产生的类版本问题
org.quartz.jobStore.useProperties: false
#表的前缀
org.quartz.jobStore.tablePrefix: QRTZ_
#数据库别名
org.quartz.jobStore.dataSource: qzDS
#是否加入集群 true 为集群 false不是集群
org.quartz.jobStore.isClustered: true
#调度实例失效的检查时间间隔,用于集群
org.quartz.jobStore.clusterCheckinInterval = 10000
##任务超时时间  原本10点开始,但是时间上10:05秒才执行,超时时间=5秒
#如果超时时间<misfireThreshold任务正常,作业还是会正常执行否则 会调用对应的策略来执行,有5个策略,默认是0,立刻执行一次
org.quartz.jobStore.misfireThreshold = 10000

org.quartz.jobStore.acquireTriggersWithinLock=true

#============================================================================
# Configure Datasources
#============================================================================
# 设置数据源(如果数据源已经整合到spring可取消)#org.quartz.dataSource.qzDS.driver = com.microsoft.sqlserver.jdbc.SQLServerDriver
#org.quartz.dataSource.qzDS.URL = jdbc:sqlserver://10.245.101.53:43118;SelectMethod=cursor;DatabaseName=QUARTZJOBINFO
#org.quartz.dataSource.qzDS.user = lijinhao
#org.quartz.dataSource.qzDS.password = jinhao168
#org.quartz.dataSource.qzDS.maxConnections = 10




#============================================================================
# Configure Plugins
#============================================================================
#org.quartz.plugin.shutdownHook.class: org.quartz.plugins.management.ShutdownHookPlugin
#org.quartz.plugin.shutdownHook.cleanShutdown: true
#如果这个覆盖配置为false，quratz启动以后将以数据库的数据为准，配置文件的修改不起作用。这个配置很重要哈，后来清了数据库才好。 
#org.quartz.plugin.jobInitializer.overWriteExistingJobs = true
####配置监听器  可整合到spring上
org.quartz.triggerListener.NAME.class = com.quartz.support.TriggerDefListener
org.quartz.triggerListener.NAME.propName = triggerDefListener

org.quartz.jobListener.NAME.class = com.quartz.support.JobDefListener
org.quartz.jobListener.NAME.propName = jobDefListener

org.quartz.schedulerListener.NAME.class = com.quartz.support.SchedulerDefListener
org.quartz.jobListener.NAME.propName = schedulerDefListener


